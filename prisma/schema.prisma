generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(cuid())
  email       String   @unique
  password    String
  name        String
  role        Role     @default(USER)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  videos      Video[]
  sections    Section[]
}

model Video {
  id                String   @id @default(cuid())
  title             String
  description       String?
  cloudflareVideoId String   @unique
  thumbnailUrl      String?
  duration          Int?     // 秒
  status            VideoStatus @default(PROCESSING)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  userId            String
  user              User     @relation(fields: [userId], references: [id])
  sectionItems      SectionItem[]
}

model Section {
  id          String   @id @default(cuid())
  title       String   // あなたにおすすめ、トレンド、コミュニティで人気など
  slug        String   @unique // for_you, trending, community_popular, featured
  description String?
  isActive    Boolean  @default(true)
  order       Int      @default(0)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  userId      String
  user        User     @relation(fields: [userId], references: [id])
  items       SectionItem[]
}

model SectionItem {
  id          String   @id @default(cuid())
  order       Int      @default(0)
  isFeatured  Boolean  @default(false) // 大きなサムネイル用
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  sectionId   String
  section     Section  @relation(fields: [sectionId], references: [id], onDelete: Cascade)
  videoId     String
  video       Video    @relation(fields: [videoId], references: [id], onDelete: Cascade)

  @@unique([sectionId, videoId])
}

enum Role {
  USER
  ADMIN
}

enum VideoStatus {
  PROCESSING
  READY
  ERROR
}
